{"ast":null,"code":"import _asyncToGenerator from \"/home/chechaandrey/Projects/itransition/course/admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./groups.service\";\nimport * as i2 from \"../base-table/base.table.component\";\nconst _c0 = [\"baseTable\"];\nexport class GroupsComponent {\n  constructor(groupsService) {\n    this.groupsService = groupsService;\n    this.querys = [{\n      namespace: 'gets',\n      method: 'GET',\n      success: data => this.baseTable.injectData(data)\n    }, {\n      namespace: 'add',\n      method: 'POST',\n      success: data => this.baseTable.injectOneData(data),\n      error: e => this.baseTable.injectErrorAdd(e)\n    }, {\n      namespace: 'edit',\n      method: 'POST',\n      success: data => this.baseTable.patchData(data),\n      error: e => this.baseTable.filterError(e)\n    }, {\n      namespace: 'remove',\n      method: 'POST',\n      success: data => this.baseTable.patchData(data),\n      error: e => this.baseTable.filterError(e)\n    }, {\n      namespace: 'delete',\n      method: 'POST',\n      success: data => this.baseTable.filterData(data),\n      error: e => this.baseTable.filterError(e)\n    }];\n    this.fields = [{\n      name: \"id\",\n      title: \"id\",\n      width: 5\n    }, {\n      name: \"group\",\n      title: \"group\",\n      width: 25,\n      editTitle: 'Unique group name',\n      editType: 'input',\n      formControlName: 'group',\n      editRequire: true,\n      viewFn: data => {\n        return data;\n      }\n    }, {\n      name: \"description\",\n      title: \"description\",\n      width: 45,\n      editTitle: 'Group description',\n      editType: 'textarea',\n      formControlName: 'description',\n      editFn: data => {\n        return data;\n      },\n      editReceiveFn: function () {\n        var _ref = _asyncToGenerator(function* () {});\n\n        return function editReceiveFn() {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    }];\n    this.service = this.groupsService;\n  }\n\n  ngAfterViewInit() {\n    this.baseTable.refreshSettings();\n  }\n\n}\n\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) {\n  return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.GroupsService));\n};\n\nGroupsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GroupsComponent,\n  selectors: [[\"groups\"]],\n  viewQuery: function GroupsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.baseTable = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"fields\", \"querys\", \"service\", \"isEdit\", \"isCreate\", \"isMore\"], [\"baseTable\", \"\"]],\n  template: function GroupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"base-table\", 0, 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"fields\", ctx.fields)(\"querys\", ctx.querys)(\"service\", ctx.service)(\"isEdit\", true)(\"isCreate\", true)(\"isMore\", true);\n    }\n  },\n  directives: [i2.BaseTableComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/home/chechaandrey/Projects/itransition/course/admin/src/app/groups/groups.component.ts"],"names":["i0","i1","i2","_c0","GroupsComponent","constructor","groupsService","querys","namespace","method","success","data","baseTable","injectData","injectOneData","error","e","injectErrorAdd","patchData","filterError","filterData","fields","name","title","width","editTitle","editType","formControlName","editRequire","viewFn","editFn","editReceiveFn","service","ngAfterViewInit","refreshSettings","ɵfac","GroupsComponent_Factory","t","ɵɵdirectiveInject","GroupsService","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","GroupsComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","template","GroupsComponent_Template","ɵɵelement","ɵɵproperty","directives","BaseTableComponent","encapsulation"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oCAApB;AACA,MAAMC,GAAG,GAAG,CAAC,WAAD,CAAZ;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,aAAD,EAAgB;AACvB,SAAKA,aAAL,GAAqBA,aAArB;AACA,SAAKC,MAAL,GAAc,CACV;AAAEC,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,MAAM,EAAE,KAA7B;AAAoCC,MAAAA,OAAO,EAAGC,IAAD,IAAU,KAAKC,SAAL,CAAeC,UAAf,CAA0BF,IAA1B;AAAvD,KADU,EAEV;AAAEH,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,MAAM,EAAE,MAA5B;AAAoCC,MAAAA,OAAO,EAAGC,IAAD,IAAU,KAAKC,SAAL,CAAeE,aAAf,CAA6BH,IAA7B,CAAvD;AAA2FI,MAAAA,KAAK,EAAGC,CAAD,IAAO,KAAKJ,SAAL,CAAeK,cAAf,CAA8BD,CAA9B;AAAzG,KAFU,EAGV;AAAER,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,MAAM,EAAE,MAA7B;AAAqCC,MAAAA,OAAO,EAAGC,IAAD,IAAU,KAAKC,SAAL,CAAeM,SAAf,CAAyBP,IAAzB,CAAxD;AAAwFI,MAAAA,KAAK,EAAGC,CAAD,IAAO,KAAKJ,SAAL,CAAeO,WAAf,CAA2BH,CAA3B;AAAtG,KAHU,EAIV;AAAER,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,MAAM,EAAE,MAA/B;AAAuCC,MAAAA,OAAO,EAAGC,IAAD,IAAU,KAAKC,SAAL,CAAeM,SAAf,CAAyBP,IAAzB,CAA1D;AAA0FI,MAAAA,KAAK,EAAGC,CAAD,IAAO,KAAKJ,SAAL,CAAeO,WAAf,CAA2BH,CAA3B;AAAxG,KAJU,EAKV;AAAER,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,MAAM,EAAE,MAA/B;AAAuCC,MAAAA,OAAO,EAAGC,IAAD,IAAU,KAAKC,SAAL,CAAeQ,UAAf,CAA0BT,IAA1B,CAA1D;AAA2FI,MAAAA,KAAK,EAAGC,CAAD,IAAO,KAAKJ,SAAL,CAAeO,WAAf,CAA2BH,CAA3B;AAAzG,KALU,CAAd;AAOA,SAAKK,MAAL,GAAc,CACV;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE,IAArB;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KADU,EAEV;AAAEF,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE,OAAxB;AAAiCC,MAAAA,KAAK,EAAE,EAAxC;AAA4CC,MAAAA,SAAS,EAAE,mBAAvD;AAA4EC,MAAAA,QAAQ,EAAE,OAAtF;AAA+FC,MAAAA,eAAe,EAAE,OAAhH;AAAyHC,MAAAA,WAAW,EAAE,IAAtI;AAA4IC,MAAAA,MAAM,EAAGlB,IAAD,IAAU;AAAE,eAAOA,IAAP;AAAc;AAA9K,KAFU,EAGV;AAAEW,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,KAAK,EAAE,aAA9B;AAA6CC,MAAAA,KAAK,EAAE,EAApD;AAAwDC,MAAAA,SAAS,EAAE,mBAAnE;AAAwFC,MAAAA,QAAQ,EAAE,UAAlG;AAA8GC,MAAAA,eAAe,EAAE,aAA/H;AAA8IG,MAAAA,MAAM,EAAGnB,IAAD,IAAU;AAAE,eAAOA,IAAP;AAAc,OAAhL;AAAkLoB,MAAAA,aAAa;AAAA,qCAAE,aAAY,CAAG,CAAjB;;AAAA;AAAA;AAAA;AAAA;AAA/L,KAHU,CAAd;AAKA,SAAKC,OAAL,GAAe,KAAK1B,aAApB;AACH;;AACD2B,EAAAA,eAAe,GAAG;AACd,SAAKrB,SAAL,CAAesB,eAAf;AACH;;AAnBwB;;AAqB7B9B,eAAe,CAAC+B,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIjC,eAAV,EAA2BJ,EAAE,CAACsC,iBAAH,CAAqBrC,EAAE,CAACsC,aAAxB,CAA3B,CAAP;AAA4E,CAAzI;;AACAnC,eAAe,CAACoC,IAAhB,GAAuB,aAAcxC,EAAE,CAACyC,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEtC,eAAR;AAAyBuC,EAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,CAAD,CAApC;AAAkDC,EAAAA,SAAS,EAAE,SAASC,qBAAT,CAA+BC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACrK9C,MAAAA,EAAE,CAACgD,WAAH,CAAe7C,GAAf,EAAoB,CAApB;AACH;;AAAC,QAAI2C,EAAE,GAAG,CAAT,EAAY;AACV,UAAIG,EAAJ;;AACAjD,MAAAA,EAAE,CAACkD,cAAH,CAAkBD,EAAE,GAAGjD,EAAE,CAACmD,WAAH,EAAvB,MAA6CJ,GAAG,CAACnC,SAAJ,GAAgBqC,EAAE,CAACG,KAAhE;AACH;AAAE,GALmD;AAKjDC,EAAAA,KAAK,EAAE,CAL0C;AAKvCC,EAAAA,IAAI,EAAE,CALiC;AAK9BC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,QAAJ,EAAc,QAAd,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C,UAA7C,EAAyD,QAAzD,CAAD,EAAqE,CAAC,WAAD,EAAc,EAAd,CAArE,CALsB;AAKmEC,EAAAA,QAAQ,EAAE,SAASC,wBAAT,CAAkCX,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACxL9C,MAAAA,EAAE,CAAC0D,SAAH,CAAa,CAAb,EAAgB,YAAhB,EAA8B,CAA9B,EAAiC,CAAjC;AACH;;AAAC,QAAIZ,EAAE,GAAG,CAAT,EAAY;AACV9C,MAAAA,EAAE,CAAC2D,UAAH,CAAc,QAAd,EAAwBZ,GAAG,CAAC1B,MAA5B,EAAoC,QAApC,EAA8C0B,GAAG,CAACxC,MAAlD,EAA0D,SAA1D,EAAqEwC,GAAG,CAACf,OAAzE,EAAkF,QAAlF,EAA4F,IAA5F,EAAkG,UAAlG,EAA8G,IAA9G,EAAoH,QAApH,EAA8H,IAA9H;AACH;AAAE,GATmD;AASjD4B,EAAAA,UAAU,EAAE,CAAC1D,EAAE,CAAC2D,kBAAJ,CATqC;AASZC,EAAAA,aAAa,EAAE;AATH,CAArB,CAArC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"./groups.service\";\nimport * as i2 from \"../base-table/base.table.component\";\nconst _c0 = [\"baseTable\"];\nexport class GroupsComponent {\n    constructor(groupsService) {\n        this.groupsService = groupsService;\n        this.querys = [\n            { namespace: 'gets', method: 'GET', success: (data) => this.baseTable.injectData(data) },\n            { namespace: 'add', method: 'POST', success: (data) => this.baseTable.injectOneData(data), error: (e) => this.baseTable.injectErrorAdd(e) },\n            { namespace: 'edit', method: 'POST', success: (data) => this.baseTable.patchData(data), error: (e) => this.baseTable.filterError(e) },\n            { namespace: 'remove', method: 'POST', success: (data) => this.baseTable.patchData(data), error: (e) => this.baseTable.filterError(e) },\n            { namespace: 'delete', method: 'POST', success: (data) => this.baseTable.filterData(data), error: (e) => this.baseTable.filterError(e) },\n        ];\n        this.fields = [\n            { name: \"id\", title: \"id\", width: 5 },\n            { name: \"group\", title: \"group\", width: 25, editTitle: 'Unique group name', editType: 'input', formControlName: 'group', editRequire: true, viewFn: (data) => { return data; } },\n            { name: \"description\", title: \"description\", width: 45, editTitle: 'Group description', editType: 'textarea', formControlName: 'description', editFn: (data) => { return data; }, editReceiveFn: async () => { } }\n        ];\n        this.service = this.groupsService;\n    }\n    ngAfterViewInit() {\n        this.baseTable.refreshSettings();\n    }\n}\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) { return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.GroupsService)); };\nGroupsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GroupsComponent, selectors: [[\"groups\"]], viewQuery: function GroupsComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.baseTable = _t.first);\n    } }, decls: 2, vars: 6, consts: [[3, \"fields\", \"querys\", \"service\", \"isEdit\", \"isCreate\", \"isMore\"], [\"baseTable\", \"\"]], template: function GroupsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"base-table\", 0, 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"fields\", ctx.fields)(\"querys\", ctx.querys)(\"service\", ctx.service)(\"isEdit\", true)(\"isCreate\", true)(\"isMore\", true);\n    } }, directives: [i2.BaseTableComponent], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}